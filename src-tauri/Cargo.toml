[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.70"

[lib]
name = "app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.3.0", features = [] }

[dependencies]
serde_json = "1.0.140"
serde = { version = "1.0.219", features = ["derive"] }
tauri = { version = "2.6.2", features = [] }
kube = { version = "1.1.0", features = ["runtime", "client", "ws"] }
k8s-openapi = { version = "0.25.0", features = ["v1_30"] }
futures = { version = "0.3.31" }
tokio = { version = "1.46.1" }
tokio-util = { version = "0.7.16", features = ["compat"] }
thiserror = "2.0.12"
uuid = { version = "1.17.0", features = ["v4"] }
rhai = { version = "1.22.2", features = [
    "serde",
    "sync",
    "no_module",
    "no_custom_syntax",
    "no_time",
] }
dirs = "6.0.0"
scan_dir = "0.3.3"
rust-embed = "8.7.2"
tauri-plugin-shell = "2.3.0"
serde_json_path = "0.7.2"
tauri-plugin-dialog = "2.3.0"
tauri-plugin-store = "2.3.0"
serde_yaml = "0.9.34-deprecated"
semver = "1.0.26"
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing-futures = "0.2.5"
rand = "0.9.1"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
lto = true
codegen-units = 1
